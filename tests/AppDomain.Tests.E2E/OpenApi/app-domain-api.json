{
  "openapi": "3.0.1",
  "info": {
    "title": "AppDomain.Api | v1",
    "contact": {
      "name": "Momentum .NET"
    },
    "license": {
      "name": "Copyright Â© 2025 Momentum"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8101"
    }
  ],
  "paths": {
    "/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Retrieves a list of invoices with optional filtering and pagination",
        "description": "Retrieves a list of invoices with optional filtering and pagination",
        "operationId": "GetInvoices",
        "parameters": [
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of invoices",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If request parameters are invalid"
          }
        }
      },
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Creates a new invoice in the system",
        "description": "Creates a new invoice in the system",
        "operationId": "CreateInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Invoice created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "description": "If the request data is invalid or validation fails",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "If the specified cashier is not found"
          }
        }
      }
    },
    "/invoices/{id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Retrieves a specific invoice by its unique identifier",
        "description": "Retrieves a specific invoice by its unique identifier",
        "operationId": "GetInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the invoice",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the invoice details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "description": "If the provided ID is invalid",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "If the invoice is not found"
          }
        }
      }
    },
    "/invoices/{id}/cancel": {
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Cancels an existing invoice, preventing further modifications",
        "description": "Cancels an existing invoice, preventing further modifications",
        "operationId": "CancelInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the invoice to cancel",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelInvoiceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelInvoiceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelInvoiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Invoice cancelled successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "description": "If the invoice cannot be cancelled (already paid or cancelled)",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "If the invoice is not found"
          },
          "409": {
            "description": "If the version is outdated (optimistic concurrency conflict)"
          }
        }
      }
    },
    "/invoices/{id}/mark-paid": {
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Marks an invoice as paid with the specified payment amount and date",
        "description": "Marks an invoice as paid with the specified payment amount and date",
        "operationId": "MarkInvoiceAsPaid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the invoice to mark as paid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkInvoiceAsPaidRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkInvoiceAsPaidRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkInvoiceAsPaidRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Invoice marked as paid successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "description": "If the payment amount is insufficient or invoice is already paid/cancelled",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "If the invoice is not found"
          },
          "409": {
            "description": "If the version is outdated (optimistic concurrency conflict)"
          }
        }
      }
    },
    "/invoices/{id}/simulate-payment": {
      "post": {
        "tags": [
          "Testing"
        ],
        "summary": "Simulates a payment for testing purposes, triggering payment processing workflow",
        "description": "Simulates a payment for testing purposes, triggering payment processing workflow",
        "operationId": "SimulatePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the invoice to simulate payment for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimulatePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimulatePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimulatePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Payment simulation triggered successfully"
          },
          "400": {
            "description": "If the payment details are invalid or invoice cannot be paid",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "If the invoice is not found"
          },
          "409": {
            "description": "If the version is outdated (optimistic concurrency conflict)"
          }
        }
      }
    },
    "/cashiers/{id}": {
      "get": {
        "tags": [
          "Cashiers"
        ],
        "summary": "Retrieves a specific cashier by their unique identifier",
        "description": "Retrieves a specific cashier by their unique identifier",
        "operationId": "GetCashier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the cashier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The cashier details if found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Cashier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cashier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cashier"
                }
              }
            }
          },
          "400": {
            "description": "If the provided ID is invalid",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "If the cashier is not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cashiers"
        ],
        "summary": "Updates an existing cashier's information",
        "description": "Updates an existing cashier's information",
        "operationId": "UpdateCashier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the cashier to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCashierRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCashierRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCashierRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The updated cashier details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Cashier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cashier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cashier"
                }
              }
            }
          },
          "400": {
            "description": "If the request data is invalid or validation fails",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "If the cashier is not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Cashiers"
        ],
        "summary": "Deletes a cashier from the system",
        "description": "Deletes a cashier from the system",
        "operationId": "DeleteCashier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the cashier to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cashier deleted successfully"
          },
          "400": {
            "description": "If the cashier ID is invalid or cashier has active invoices",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "If the cashier is not found"
          }
        }
      }
    },
    "/cashiers": {
      "get": {
        "tags": [
          "Cashiers"
        ],
        "summary": "Retrieves a list of cashiers with optional filtering",
        "description": "Retrieves a list of cashiers with optional filtering",
        "operationId": "GetCashiers",
        "parameters": [
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of cashiers matching the specified criteria",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If request parameters are invalid",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cashiers"
        ],
        "summary": "Creates a new cashier in the system",
        "description": "Creates a new cashier in the system",
        "operationId": "CreateCashier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCashierRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCashierRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCashierRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The created cashier details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Cashier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cashier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cashier"
                }
              }
            }
          },
          "400": {
            "description": "If the request data is invalid or validation fails",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/json": {
                "schema": {}
              }
            }
          },
          "409": {
            "description": "If a cashier with the same email already exists"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CancelInvoiceRequest": {
        "required": [
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Cashier": {
        "required": [
          "name",
          "email"
        ],
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "cashierId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "cashierPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CashierPayment"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CashierPayment": {
        "type": "object",
        "properties": {
          "cashierId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateCashierRequest": {
        "required": [
          "name",
          "email"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the cashier."
          },
          "email": {
            "type": "string",
            "description": "The email address of the cashier."
          }
        },
        "description": "Request to create a new cashier."
      },
      "CreateInvoiceRequest": {
        "required": [
          "name",
          "amount"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name or description of the invoice."
          },
          "amount": {
            "type": "number",
            "description": "The invoice amount (required).",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "The currency code for the invoice amount (defaults to empty string).",
            "default": "",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "The optional due date for payment.",
            "format": "date-time",
            "default": null,
            "nullable": true
          },
          "cashierId": {
            "type": "string",
            "description": "The optional unique identifier of the cashier associated with this invoice.",
            "format": "uuid",
            "default": null,
            "nullable": true
          }
        },
        "description": "Request to create a new invoice in the system."
      },
      "Invoice": {
        "required": [
          "tenantId",
          "invoiceId",
          "name",
          "status",
          "amount",
          "currency",
          "dueDate",
          "cashierId",
          "amountPaid",
          "paymentDate",
          "createdDateUtc",
          "updatedDateUtc",
          "version"
        ],
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "invoiceId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cashierId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "amountPaid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDateUtc": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MarkInvoiceAsPaidRequest": {
        "required": [
          "version",
          "amountPaid"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "The current version of the invoice for optimistic concurrency control.",
            "format": "int32"
          },
          "amountPaid": {
            "type": "number",
            "description": "The amount that was paid (required).",
            "format": "double"
          },
          "paymentDate": {
            "type": "string",
            "description": "The optional date when payment was received (defaults to current time if not specified).",
            "format": "date-time",
            "default": null,
            "nullable": true
          }
        },
        "description": "Request to mark an invoice as paid with payment details."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Result": {
        "required": [
          "tenantId",
          "cashierId",
          "name",
          "email"
        ],
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "cashierId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "SimulatePaymentRequest": {
        "required": [
          "version",
          "amount"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "description": "The current version of the invoice for optimistic concurrency control.",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "description": "The payment amount to simulate (required).",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "The currency code for the payment (defaults to \"USD\").",
            "default": "USD",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "description": "The payment method to simulate (defaults to \"Credit Card\").",
            "default": "Credit Card",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "description": "The optional payment reference identifier (auto-generated if not provided).",
            "default": null,
            "nullable": true
          }
        },
        "description": "Request to simulate a payment for testing purposes."
      },
      "UpdateCashierRequest": {
        "required": [
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The updated name of the cashier."
          },
          "email": {
            "type": "string",
            "description": "The updated email address of the cashier.",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "description": "The current version of the cashier for optimistic concurrency control.",
            "format": "int32"
          }
        },
        "description": "Request to update an existing cashier."
      }
    }
  },
  "tags": [
    {
      "name": "Invoices",
      "description": "Manages invoice operations such as retrieval, creation, cancellation, and payment processing."
    },
    {
      "name": "Testing"
    },
    {
      "name": "Cashiers",
      "description": "Manages cashier operations such as retrieval, creation, updating, and deletion."
    }
  ],
  "x-assembly-version": "0.0.1.0"
}