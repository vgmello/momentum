{
  "$schema": "http://json.schemastore.org/template",
  "author": "Momentum Team",
  "classifications": ["Web", "API", "Microservices", "Domain-Driven Design"],
  "identity": "Momentum.ProjectTemplate",
  "name": "Momentum Domain Template",
  "shortName": "mmt",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sourceName": "AppDomain",
  "preferNameDirectory": true,
  "defaultName": "MyDomain",
  "description": "Creates a domain-driven microservices solution following Momentum architecture patterns",
  "symbols": {
    "domain": {
      "type": "parameter",
      "datatype": "string",
      "description": "The name of the domain (e.g., Billing, Inventory)",
      "replaces": "AppDomain",
      "fileRename": "AppDomain",
      "defaultValue": "MyDomain",
      "isRequired": true
    },
    "api": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Include API project",
      "defaultValue": "true"
    },
    "backoffice": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Include BackOffice project",
      "defaultValue": "true"
    },
    "orleans": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Include Orleans-based BackOffice project",
      "defaultValue": "false"
    },
    "db": {
      "type": "parameter",
      "datatype": "string",
      "description": "Database type (liquid,npgsql)",
      "defaultValue": "liquid,npgsql"
    },
    "no-sample": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Skip generating sample domain entity",
      "defaultValue": "false"
    },
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Skip automatic restore after creating the template",
      "defaultValue": "false"
    },
    "includeApi": {
      "type": "computed",
      "value": "(api == \"true\" || (!api && !backoffice && !orleans))"
    },
    "includeBackOffice": {
      "type": "computed",
      "value": "(backoffice == \"true\" || (!api && !backoffice && !orleans))"
    },
    "includeOrleans": {
      "type": "computed",
      "value": "(orleans == \"true\")"
    },
    "includeDatabase": {
      "type": "computed",
      "value": "(db != \"\" || (!api && !backoffice && !orleans))"
    },
    "includeSample": {
      "type": "computed",
      "value": "(no-sample != \"true\")"
    }
  },
  "primaryOutputs": [
    {
      "condition": "(includeApi)",
      "path": "src/AppDomain.Api/AppDomain.Api.csproj"
    },
    {
      "path": "src/AppDomain/AppDomain.csproj"
    },
    {
      "path": "src/AppDomain.Contracts/AppDomain.Contracts.csproj"
    },
    {
      "condition": "(includeBackOffice)",
      "path": "src/AppDomain.BackOffice/AppDomain.BackOffice.csproj"
    },
    {
      "condition": "(includeOrleans)",
      "path": "src/AppDomain.BackOffice.Orleans/AppDomain.BackOffice.Orleans.csproj"
    },
    {
      "condition": "(includeDatabase)",
      "path": "infra/AppDomain.Database/AppDomain.Database.csproj"
    },
    {
      "path": "tests/AppDomain.Tests/AppDomain.Tests.csproj"
    }
  ],
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(!includeApi)",
          "exclude": [
            "src/AppDomain.Api/**/*"
          ]
        },
        {
          "condition": "(!includeBackOffice)",
          "exclude": [
            "src/AppDomain.BackOffice/**/*"
          ]
        },
        {
          "condition": "(!includeOrleans)",
          "exclude": [
            "src/AppDomain.BackOffice.Orleans/**/*"
          ]
        },
        {
          "condition": "(!includeDatabase)",
          "exclude": [
            "infra/AppDomain.Database/**/*"
          ]
        },
        {
          "condition": "(!includeSample)",
          "exclude": [
            "**/Products/**/*",
            "**/Product*.*"
          ]
        }
      ]
    }
  ],
  "postActions": [
    {
      "id": "restore",
      "condition": "(skipRestore != \"true\")",
      "description": "Restore NuGet packages",
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true,
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ]
    }
  ]
}