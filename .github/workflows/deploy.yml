name: Deploy Momentum Libraries

on:
  push:
    branches:
      - main
    paths:
      - "libs/Momentum/src/**"
      - "libs/Momentum/docs/**"
    tags:
      - "release"
      - "v*.*.*"

  workflow_dispatch:
    inputs:
      deploy-type:
        description: "Type of deployment"
        required: true
        default: "prerelease"
        type: choice
        options:
          - prerelease
          - release
          - docs-only
          - test-prerelease
          - test-release
      check-changes:
        description: "Check for lib changes"
        required: false
        default: false
        type: boolean
      nuget-source:
        description: "NuGet source (for testing)"
        required: false
        default: "https://api.nuget.org/v3/index.json"

env:
  DOTNET_VERSION: "9.0.x"

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment:
      name: production
      url: ${{ steps.docs-deployment.outputs.page_url }}

    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get deployment Config
        id: options
        uses: ./.github/actions/deployment-config
        with:
          deploy-type: ${{ github.event.inputs.deploy-type }}
          nuget-source-override: ${{ github.event.inputs.nuget-source }}
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}
          nuget-test-api-key: ${{ secrets.NUGET_TEST_API_KEY }}

      - name: Build .NET projects
        uses: ./.github/actions/build
        with:
          build-target: libs/Momentum/Momentum.slnx

      - name: Calculate pre-release version
        if: steps.options.outputs.deploy-prerelease == 'true'
        id: prerelease-version
        uses: ./.github/actions/version-calculate
        with:
          release-type: prerelease
          check-changes: ${{ github.event.inputs.check-changes }}

      - name: Generate pre-release notes
        if: steps.options.outputs.deploy-prerelease == 'true' && steps.prerelease-version.outputs.skip != 'true'
        uses: ./.github/actions/generate-release-notes
        with:
          version: ${{ steps.prerelease-version.outputs.version }}
          tag: ${{ steps.prerelease-version.outputs.tag }}
          release-type: prerelease
          output-file: prerelease_notes.md

      - name: Create GitHub pre-release
        if: steps.options.outputs.deploy-prerelease == 'true' && steps.prerelease-version.outputs.skip != 'true' && steps.options.outputs.is-test != 'true'
        shell: pwsh
        run: |
          & ./.github/scripts/Create-GitHubRelease.ps1 `
            -Tag "${{ steps.prerelease-version.outputs.tag }}" `
            -Title "Momentum Libraries ${{ steps.prerelease-version.outputs.tag }} (Pre-release)" `
            -NotesFile "prerelease_notes.md" `
            -Prerelease `
            -Target "main"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish pre-release packages
        if: steps.options.outputs.deploy-prerelease == 'true' && steps.prerelease-version.outputs.skip != 'true'
        uses: ./.github/actions/nuget-publish
        with:
          path: libs/Momentum/Momentum.slnx
          package-version: ${{ steps.prerelease-version.outputs.version }}
          nuget-api-key: ${{ steps.options.outputs.nuget-api-key }}
          nuget-source: ${{ steps.options.outputs.nuget-source }}

      - name: Verify main branch for release
        if: steps.options.outputs.deploy-prerelease == 'false'
        shell: pwsh
        run: |
          $currentBranch = git rev-parse --abbrev-ref HEAD
          if ($currentBranch -ne "main") {
            Write-Error "❌ Release must be created from main branch. Current: $currentBranch"
            exit 1
          }
          Write-Host "✅ Confirmed on main branch"

      - name: Calculate release version
        if: steps.options.outputs.deploy-prerelease == 'false'
        id: release-version
        uses: ./.github/actions/version-calculate
        with:
          version-file: libs/Momentum/version.txt
          check-changes: false

      - name: Generate release notes
        if: steps.options.outputs.deploy-prerelease == 'false'
        uses: ./.github/actions/generate-release-notes
        with:
          version: ${{ steps.release-version.outputs.version }}
          tag: ${{ steps.release-version.outputs.tag }}
          output-file: release_notes.md

      - name: Create GitHub release
        if: steps.options.outputs.deploy-prerelease == 'false' && steps.options.outputs.is-test != 'true'
        shell: pwsh
        run: |
          & ./.github/scripts/Create-GitHubRelease.ps1 `
            -Tag "${{ steps.release-version.outputs.tag }}" `
            -Title "Momentum Libraries ${{ steps.release-version.outputs.tag }}" `
            -NotesFile "release_notes.md" `
            -Target "main"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish release packages
        if: steps.options.outputs.deploy-prerelease == 'false'
        uses: ./.github/actions/nuget-publish
        with:
          path: libs/Momentum/Momentum.slnx
          package-version: ${{ steps.release-version.outputs.version }}
          nuget-api-key: ${{ steps.options.outputs.nuget-api-key }}
          nuget-source: ${{ steps.options.outputs.nuget-source }}

      - name: Setup Pages
        if: steps.options.outputs.deploy-docs == 'true'
        uses: actions/configure-pages@v5

      - name: Build documentation
        if: steps.options.outputs.deploy-docs == 'true'
        uses: ./.github/actions/docs-build
        with:
          docs-path: libs/Momentum/docs
          build-dotnet: false

      - name: Upload to GitHub Pages
        if: steps.options.outputs.deploy-docs == 'true'
        uses: actions/upload-pages-artifact@v4
        with:
          path: libs/Momentum/docs/.vitepress/dist

      - name: Deploy to GitHub Pages
        if: steps.options.outputs.deploy-docs == 'true'
        id: docs-deployment
        uses: actions/deploy-pages@v4

      - name: Deployment Summary
        shell: pwsh
        run: |
          $args = @(
            "-PrereleaseVersion", "${{ steps.prerelease-version.outputs.version }}",
            "-PrereleaseTag", "${{ steps.prerelease-version.outputs.tag }}",
            "-ReleaseVersion", "${{ steps.release-version.outputs.version }}",
            "-ReleaseTag", "${{ steps.release-version.outputs.tag }}",
            "-NugetSource", "${{ steps.options.outputs.nuget-source }}",
            "-DocsUrl", "${{ steps.docs-deployment.outputs.page_url }}"
          )
          
          if ("${{ steps.options.outputs.is-test }}" -eq "true") {
            $args += "-IsTest"
          }
          
          if ("${{ steps.options.outputs.deploy-prerelease }}" -eq "true") {
            $args += "-DeployPrerelease"
          }
          
          if ("${{ steps.prerelease-version.outputs.skip }}" -eq "true") {
            $args += "-PrereleaseSkip"
          }
          
          if ("${{ steps.options.outputs.deploy-docs }}" -eq "true") {
            $args += "-DeployDocs"
          }
          
          & ./.github/scripts/Write-DeploymentSummary.ps1 @args
