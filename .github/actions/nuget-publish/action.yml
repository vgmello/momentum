name: "Publish NuGet Packages"
description: "Pack and publish NuGet packages"

inputs:
  path:
    description: "Path to the project or solution to pack"
    required: true
  config:
    description: "MS Build configuration"
    required: false
    default: "Release"
  package-version:
    description: "Version to use for the packages"
    required: true
  pack-args:
    description: "Additional arguments for dotnet pack"
    required: false
    default: ""
  nuget-api-key:
    description: "NuGet API key for publishing"
    required: true
  nuget-source:
    description: "NuGet source URL"
    required: false
    default: "https://api.nuget.org/v3/index.json"
  skip-duplicate:
    description: "Skip duplicate packages"
    required: false
    default: "true"
  dry-run:
    description: "Perform a dry run without actually publishing"
    required: false
    default: "false"

outputs:
  published-packages:
    description: "List of published packages"
    value: ${{ steps.publish.outputs.packages }}
  output-dir:
    description: "Packages output dir"
    value: ${{ steps.pack.outputs.output_dir }}

runs:
  using: "composite"
  steps:
    - name: Publish NuGet packages
      id: publish
      shell: pwsh
      env:
        NUGET_API_KEY: ${{ inputs.nuget-api-key }}
      run: |
        # Mask the API key in logs
        if ($env:NUGET_API_KEY -ne "") {
          Write-Host "::add-mask::$($env:NUGET_API_KEY)"
        }
        
        $params = @{
          Path = "${{ inputs.path }}"
          Config = "${{ inputs.config }}"
          PackageVersion = "${{ inputs.package-version }}"
          NugetApiKey = $env:NUGET_API_KEY
          NugetSource = "${{ inputs.nuget-source }}"
        }
        
        # Parse pack-args as an array if provided
        $packArgsInput = "${{ inputs.pack-args }}"
        if (-not [string]::IsNullOrWhiteSpace($packArgsInput)) {
          # Split on spaces but preserve quoted strings
          $packArgsArray = $packArgsInput -split '\s+(?=(?:[^"]*"[^"]*")*[^"]*$)' | Where-Object { $_ -ne '' }
          $params['PackArgs'] = $packArgsArray
        }
        
        if ("${{ inputs.skip-duplicate }}" -eq "true") {
          $params['SkipDuplicate'] = $true
        }
        
        if ("${{ inputs.dry-run }}" -eq "true") {
          $params['DryRun'] = $true
        }
        
        & "${{ github.action_path }}/Publish-NuGetPackages.ps1" @params
