<Project>

    <PropertyGroup Condition=" '$(IsPackable)' == 'true' ">
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Authors>Vitor M</Authors>
        <Company>Momentum .NET</Company>
        <Copyright>Copyright (c) 2025 Momentum .NET</Copyright>
        <RepositoryUrl>https://github.com/vgmello/momentum</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <PackageIcon>icon.png</PackageIcon>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageTags>momentum;mmt;</PackageTags>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageReleaseNotes>https://github.com/vgmello/momentum/releases/tag/v$(PackageVersion)</PackageReleaseNotes>
    </PropertyGroup>

    <ItemGroup Condition=" '$(IsPackable)' == 'true' ">
        <PackageReference Include="Microsoft.SourceLink.GitHub"/>
        <None Include="..\..\assets\icon.png" Pack="true" PackagePath="" Visible="false"/>
        <None Include="README.md" Pack="true" PackagePath="\" Visible="false" Condition="Exists('README.md')"/>
    </ItemGroup>

    <Target Name="CleanOldPackages" AfterTargets="Build" Condition=" '$(IsPackable)' == 'true' and '$(Configuration)' == 'Debug' ">
        <ItemGroup>
            <OldPackagesToDelete Include="$(MSBuildProjectDirectory)/$(PackageOutputPath)*.nupkg"/>
            <OldPackagesToDelete Include="$(BaseIntermediateOutputPath)**/*.nuspec"/>
            <OldPackagesToDelete Include="$(SolutionDir).local/nuget/$(PackageId).*.nupkg"/>
        </ItemGroup>
        <Message Text="Cleaning up nupkg/nuspec files" Importance="high"/>
        <Delete Files="@(OldPackagesToDelete)"/>
    </Target>

    <Target Name="PushToLocalFeed" AfterTargets="Pack" Condition=" '$(IsPackable)' == 'true' and '$(Configuration)' == 'Debug' and '$(SolutionDir)' != '*Undefined*' ">
        <MakeDir Directories="$(SolutionDir).local/nuget"/>
        <Exec Command="dotnet nuget push &quot;$(PackageOutputPath)$(PackageId).$(PackageVersion).nupkg&quot; --source &quot;$(SolutionDir).local/nuget&quot; --skip-duplicate"/>
    </Target>

</Project>
